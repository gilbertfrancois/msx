;RECEIVING AND SENDING RS232 DATA @9600 BITS/S  ON A STANDARD MSX 3.57MHz 

VOICEAQ EQU &C800 ;BUFFER TO OCCUPY IN SYSTEM AREA: DO NOT USE PLAY... 

    org VOICEAQ
;MSX .BIN HEADER
    db &fe
    dw START, PROGEND, START

START:
;TRANSFER 'BC' BYTES FROM JOY2, 'UP', PIN1 TO (HL)
;MSX, Z80 3.58MHz
;SETS CARRY BIT ON ERROR. A HOLDS ERROR CODE:
;A=1 RS232 LINE NOT HIGH,A=2 STARTBIT TIMEOUT
RECBYTES:	
	ld d,b				;USE DE AS BYTE COUNTER, B AS BIT COUNTER AND C AS VDP STATUS REGISTER
	ld e,c
	ld bc,&0099			;B=0 -> ~4 SECONDS TIME-OUT

	di					;NO INTERRUPTS, TIME CRITICAL ROUTINE

	ld a,&0F			;PSG REGISTER 15, SELECT JOYSTICK PORT 2
	out (&a0),a
	in A,(&a2)
	set 6,a				;SELECT JOY2
	out (&a1),a

	ld A,&0e			;SET PSG #14
	out (&a0),a
	in A,(&a2)
	and &01
	jr nz,.STARTBIT		;RS232 LINE SHOULD BE HIGH, OTHERWISE STOP
	ld a,&01			;ERROR, RS232 LINE NOT READY
	scf
	ei
	ret
.STARTBIT:
	in a,(&a2)
	and &01
	jp z,.STARTREAD		;YES, WE HAVE A START BIT

	in f,(c)			;VDP INTERRUPT?
	jp p,.STARTBIT		;NO INTERRUPT

	in a,(&a2)
	and &01
	jp z,.STARTREAD		;YES, WE HAVE A START BIT

	djnz .STARTBIT
	ld a,&02			;ERROR START BIT TIME-OUT ~4-5S
	scf
	ei
	ret
.STARTREAD:
	ld a,(DELAY_START)	;DELAY FROM START BIT -> BIT 0
	call DELAY			;WAIT FOR BIT0
	ld b,7				;WE NEED 8 BITS, READ AS 7+1
.READBITS:
	in a,(&a2)
	rrca				;SHIFT DATA BIT (0) -> CARRY
	rr (hl)				;SHIFT CARRY -> [HL]
	ld a,(DELAY_BITS)	;DELAY FROM BIT N -> BIT N+1
	call DELAY
	djnz .READBITS
	in a,(&a2)			;LAST BIT, OTHER DELAY (STOPBIT)
	rrca				;SHIFT DATA BIT (0) -> CARRY
	rr (hl)				;SHIFT CARRY -> [HL]
.NEXTBYTE:
	ld a,(DELAY_STOP)	;DELAY BIT 7 TO ENSURE WE ARE AT STOPBIT
	call DELAY
	ld b,a				;LD B,0 BUT A=0
	inc hl
	dec de
	ld a,d
	or e
	jp z,.FINISH		;WE ARE FINISHED
	in a,(&a2)			;READ ACTUAL STOPBIT VALUE
	and &01
	jr nz,.STARTBIT		;NEXT BYTE OR STOPBIT ERROR
.STOPBITERROR:
	ld a,3
	scf
	ei
	ret
.FINISH:
	or a				;RESET CARRY FLAG
	ei
	ret

;SEND 'BC' BYTES FROM [HL] TO PIN6, JOY2
;MSX, Z80 3.58MHz
SENDBYTES:	
	DI	;NO INTERRUPTS
	LD A,&0F	;SELECT PSG REG #15
	OUT (&A0),A
	IN A,(&A2)	
	PUSH AF		;SAVE VALUE OF REG #15
	SET 6,A		;JOY2
	RES 2,A		;TRIG1 LOW
	LD E,A		;0V VALUE (0) IN E
	SET 2,A		;TRIG1 HIGH
	LD D,A		;5V VALUE (1) IN D
.BYTELOOP:	
	PUSH BC
	LD A,E			;START BIT (=0)
.STARTBIT:	
	LD C,(HL)
	LD B,&08
	OUT (&A1),A
	ADD A,&00		;DUMMY 8 CYCLES
	LD A,(DELAY_BITS)
	CALL DELAY
.BITLOOP:	
	RRC C
	LD A,D			;ASSUME BIT=1
	JR C,.SETBIT
	LD A,E			;NO, BIT=0
.SETBIT:	
	OUT (&A1),A
	LD A,(DELAY_BITS)
	CALL DELAY
	DJNZ .BITLOOP
.STOPBIT:	
	LD A,D
	OUT (&A1),A		;STOP BIT (=1)
	LD A,(DELAY_STOP)
	CALL DELAY
	POP BC
	DEC BC
	INC HL
	LD A,B
	OR C
	JP NZ,.BYTELOOP
.EXIT:
	POP AF
	OUT (&A1),A		;RESTORE REG #15 OF PSG		
	EI
	RET

DELAY:
	DEC A
	JP NZ,DELAY
	RET

;SET SPEED FRO SERIAL COMMUNICATION: A=0 2400 BPS, A=1 4800 BPS, A=2 9600 BPS, A=3 19200 BPS
SETSPEED:
	and 3
	ld hl,SERIALSPEEDDATA
	ld e,A
	sla a
	add a,e
	ld e,a
	ld d,0
	ADD hl,de
	ld de,DELAY_START
	ld bc,3
	ldir
	ret

;DEFAULT SETTING 9600 BPS
DELAY_START:
    db 28
DELAY_BITS:
    db 18
DELAY_STOP:
    db 16

SERIALSPEEDDATA:
    ;2400 BPS (0)
    db 133,88,85
    ;4800 BPS (1)
    db 63,41,38
    ;9600 BPS (2)
    db 28,18,16
    ;19200 BPS (3)
    db 11,6,4

PROGEND:
    ; end

