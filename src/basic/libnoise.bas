16000 ' libnoise
16010 ' Perlin noise generator
16020 ' Gilbert Francois Duivesteijn
16030 '
16040 ' init: 16000
16050 ' run: 16600
16060 '
16070 ' Init Perlin noise
16080 ' in: NX,NY: nr of cells
16090 '     OX,OY: offset in pxls
16100 ' out: GX,GY: grad in nodes
16110 '      PX,PY: pxls per cell
16120 '
16130 PRINT "[i] Generating random gradient."
16140 T0=TIME
16150 PX=(256-2*OX)/NX
16160 PY=(192-2*OY)/NY
16170 PRINT "[i] px: " + STR$(PX)
16180 PRINT "[i] py: " + STR$(PY)
16190 DIM GX(NX,NY): ' grad dv/dx
16200 DIM GY(NX,NY): ' grad dv/dy
16210 FOR I=0 TO NX
16220 FOR J=0 TO NY
16230 GX(I,J) = 2*RND(TIME)-1
16240 GY(I,J) = 2*RND(TIME)-1
16250 NEXT J
16260 NEXT I
16270 T1=TIME
16280 PRINT "    Done, " + STR$((T1-T0)/50) + " sec."
16290 RETURN
16300 '
16310 ' Dot gradient
16320 ' in:  x,ix,y,iy,gx,gy
16330 ' out: dg
16340 '
16350 DX=XP-IX
16360 DY=YP-IY
16370 DG=GX(IX,IY)*DX + GY(IX,IY)*DY
16380 RETURN
16390 '
16400 ' Interpolate
16410 ' in:  n0,n1,w
16420 ' out: n2
16430 '
16440 A2=(A1-A0)*W+A0
16450 RETURN
16600 '
16610 ' Perlin noise
16620 ' in: X, Y
16630 ' out: Z
16640 '
16650 XP=(X-OX)/PX
16660 YP=(Y-OY)/PY
16670 IX=INT(XP)
16680 IY=INT(YP)
16690 GOSUB 16300
16700 Z0=DG: DG=0
16710 IX=INT(XP)+1
16720 IY=INT(YP)
16730 GOSUB 16300
16740 Z1=DG: DG=0
16750 ' point(ix0,iy1)
16760 IX=INT(XP)
16770 IY=INT(YP)+1
16780 GOSUB 16300
16790 Z2=DG: DG=0
16800 ' point(ix1,iy1)
16810 IX=INT(XP)+1
16820 IY=INT(YP)+1
16830 GOSUB 16300
16840 Z3=DG: DG=0
16850 ' interpolate
16860 A0=Z0: A1=Z1: W=XP-INT(XP)
16870 GOSUB 16390
16880 Z4=A2: A2=0
16890 A0=Z2: A1=Z3: W=XP-INT(XP)
16900 GOSUB 16390
16910 Z5=A2: A2=0
16920 A0=Z4: A1=Z5: W=YP-INT(YP)
16930 GOSUB 16390
16940 Z=A2: A2=0
16950 RETURN
